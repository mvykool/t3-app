import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import type {RouterOutputs} from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { useState } from "react";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {

  const {user }= useUser();

  const ctx = api.useContext();

  const {mutate, isLoading: isPosting} = api.posts.create.useMutation({
    onSuccess:  () => {
      setInput("");
      void ctx.posts.getAll.invalidate();
    },
  });

  const [input, setInput] = useState("");

  if(!user) return null;

  return (
    <div className="border-gray-300 border-b-2 p-4 flex gap-3 items-center">
      <Image src={user.profileImageUrl} alt="profile-img" className="h-14  w-14 rounded-full" width="80" height="80" />
      <input 
      type="text" 
      placeholder="type your emoji"
      className="h-10 flex-1 rounded-xl bg-gray-800 px-2"
      value={input}
      onChange={(e) => setInput(e.target.value)} 
      disabled={isPosting}
      />
      <button onClick={() => mutate({content: input})}>post</button>
    </div>
  );
};

type PostWithUser  = RouterOutputs["posts"]["getAll"][number];

const PostView =  (props: PostWithUser)  => {

  const {post, author} = props;

  return (
    <div className="flex p-4 items-center gap-5">
    <Image src={author.profileImage} alt=""  className="h-14  w-14 rounded-full" width="80" height="80" />  
    <div className="flex flex-col">
    <div><span>{`@${author.username}`}</span><span>{`-  ${dayjs(post.createdAt).fromNow()}`}</span></div>
    {post.content}
    </div>
    </div>
  );
};

const Home: NextPage = () => {

  const user = useUser();

  console.log(user);

  const {data} = api.posts.getAll.useQuery()

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="h-full w-full border-x md:max-w-2xl">
        <div>
          {!user.isSignedIn && <SignInButton/>}
          {user.isSignedIn && <CreatePostWizard/>}
        </div>
        <div>
          {data?.map((  fullPost ) => ( 
          <PostView {...fullPost} key={fullPost.post.id} />
            ))}
        </div>
        </div>
      <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
      </main>
    </>
  );
};

export default Home;
